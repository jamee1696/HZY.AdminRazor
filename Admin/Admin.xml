<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Admin</name>
    </assembly>
    <members>
        <member name="P:Admin.Areas.Admin.Controllers.AdminBaseController.db">
            <summary>
            数据访问对象
            </summary>
        </member>
        <member name="P:Admin.Areas.Admin.Controllers.AdminBaseController._Account">
            <summary>
            当前用户信息
            </summary>
        </member>
        <member name="P:Admin.Areas.Admin.Controllers.AdminBaseController.IgnoreSessionCheck">
            <summary>
            是否忽略Session检查
            </summary>
        </member>
        <member name="P:Admin.Areas.Admin.Controllers.AdminBaseController.MenuKey">
            <summary>
            菜单标识
            </summary>
        </member>
        <member name="P:Admin.Areas.Admin.Controllers.AdminBaseController.FormKey">
            <summary>
            表单标识
            </summary>
        </member>
        <member name="P:Admin.Areas.Admin.Controllers.AdminBaseController.PrintTitle">
            <summary>
            打印标题
            </summary>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.AdminBaseController.FormCollectionToHashtable(Microsoft.AspNetCore.Http.IFormCollection)">
            <summary>
            将  FormCollection  转换为  Dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.AdminBaseController.GetUrlQueryString(System.String)">
            <summary>
            根据地址字符串获取参数
            </summary>
            <param name="Url"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.AdminBaseController.GetPagingEntity(System.Collections.Hashtable,System.Int32,System.Int32)">
            <summary>
            数据源
            </summary>
            <param name="query"></param>
            <param name="page"></param>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.AdminBaseController.GetDataSource(Microsoft.AspNetCore.Http.IFormCollection,System.Int32,System.Int32)">
            <summary>
            列表页接口
            </summary>
            <param name="fc"></param>
            <param name="page"></param>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.AdminBaseController.HandleUpFile(Microsoft.AspNetCore.Http.IFormFile,System.String,System.String[],System.Action{Microsoft.AspNetCore.Http.IFormFile})">
            <summary>
            处理上传文件
            </summary>
            <param name="_IFormFile"></param>
            <param name="_WebRootPath"></param>
            <param name="Format">文件格式</param>
            <param name="Check">执行前 验证回调</param>
            <returns></returns>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.AdminBaseController.ExportExcel(Microsoft.AspNetCore.Http.IFormCollection,System.Int32,System.Int32)">
            <summary>
            导出EXCEL
            </summary>
            <param name="fc"></param>
            <param name="page"></param>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.AdminBaseController.DBToExcel(Entitys.SysClass.PagingEntity)">
            <summary>
            表数据转换为EXCEL
            </summary>
            <param name="pe"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.AdminBaseController.Print(Microsoft.AspNetCore.Http.IFormCollection)">
            <summary>
            打印
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.HomeController.Connetct">
            <summary>
            保持连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.LoginController.Check(System.String,System.String,System.String)">
            <summary>
            检查帐户
            </summary>
            <param name="UserName">登陆名</param>
            <param name="UserPassword">登陆密码</param>
            <param name="LoginCode">验证码</param>
            <returns></returns>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.LoginController.Out">
            <summary>
            退出登录
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.Areas.Admin.Controllers.Sys.AppLogController">
            <summary>
            操作日志
            </summary>
        </member>
        <member name="T:Admin.Areas.Admin.Controllers.Sys.ChangePwdController">
            <summary>
            修改密码
            </summary>
        </member>
        <member name="T:Admin.Areas.Admin.Controllers.Sys.CreateCodeController">
            <summary>
            创建代码
            </summary>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.Sys.CreateCodeController.GetZTreeAllTable">
            <summary>
            获取数据库中所有的表和字段
            </summary>
            <returns></returns>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.Sys.CreateCodeController.Save(Microsoft.AspNetCore.Http.IFormCollection)">
            <summary>
            保存
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.Areas.Admin.Controllers.Sys.FunctionController">
            <summary>
            功能管理
            </summary>
        </member>
        <member name="T:Admin.Areas.Admin.Controllers.Sys.MenuFunctionController">
            <summary>
            菜单功能
            </summary>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.Sys.MenuFunctionController.GetMenuAndFunctionTree">
            <summary>
            获取菜单和功能树
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.Areas.Admin.Controllers.Sys.RoleController">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="T:Admin.Areas.Admin.Controllers.Sys.RoleFunctionController">
            <summary>
            角色功能
            </summary>
        </member>
        <member name="M:Admin.Areas.Admin.Controllers.Sys.RoleFunctionController.GetRoleMenuFunctionTree(System.String)">
            <summary>
            获取角色菜单功能
            </summary>
            <returns></returns>
        </member>
        <member name="T:Admin.Areas.Admin.Controllers.Sys.UserController">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="P:Admin.Controllers.Api.ApiBaseController.db">
            <summary>
            数据访问对象
            </summary>
        </member>
        <member name="T:Admin.Controllers.Api.AuthorizationController">
            <summary>
            授权接口   演示： webapi + swagger
            </summary>
        </member>
        <member name="M:Admin.Controllers.Api.AuthorizationController.Check(System.String,System.String)">
            <summary>
            检查帐户并获取 token
            </summary>
            <remarks>
            {
                   status = 1,
                   token = _TokenType + new JwtTokenUtil(this._IConfiguration).GetToken(Guid.NewGuid().ToStr()),
                   tokenType = _TokenType,
                   jumpurl = AppConfig.HomePageUrl + "#!%u9996%u9875#!/Admin/Home/Main/"
            }
            </remarks>
            <param name="UserName"></param>
            <param name="UserPasswaord"></param>
            <returns></returns>
        </member>
        <member name="M:Admin.Controllers.Api.AuthorizationController.GetUser">
            <summary>
            检查帐户并获取 token
            </summary>
            <remarks>
            {
                   status = 1,
                   userName = "hzy"
            }
            </remarks>
            <returns></returns>
        </member>
        <member name="T:Aop.AopAdminActionFilter">
            <summary>
            检查session 
            </summary>
        </member>
        <member name="P:Aop.AopAdminActionFilter.Ignore">
            <summary>
            忽略特性
            </summary>
        </member>
        <member name="M:Aop.AopAdminActionFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            每次请求Action之前发生，，在行为方法执行前执行
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Aop.AopCheckEntityFilter">
            <summary>
            实体验证 特性
            </summary>
        </member>
        <member name="M:Aop.AopCheckEntityFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            每次请求Action之前发生，，在行为方法执行前执行
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:Aop.ApiCheckTokenFilter">
            <summary>
            检查 Authorization
            </summary>
        </member>
        <member name="P:Aop.ApiCheckTokenFilter.Ignore">
            <summary>
            忽略特性
            </summary>
        </member>
        <member name="M:Aop.ApiCheckTokenFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            每次请求Action之前发生，，在行为方法执行前执行
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:AppFormTag.Base.BaseClass">
            <summary>
            标签库 基础类
            </summary>
        </member>
        <member name="P:AppFormTag.Base.BaseClass.Name">
            <summary>
            标签名称
            </summary>
        </member>
        <member name="P:AppFormTag.Base.BaseClass.Attribute">
            <summary>
            属性
            </summary>
        </member>
        <member name="M:AppFormTag.Base.BaseClass.GetAttributeString">
            <summary>
            获取属性 字符串
            </summary>
            <param name="_Attribute"></param>
            <returns></returns>
        </member>
        <member name="T:AppFormTag.Base.OneLabel">
            <summary>
            单一 标签 例如 ：<input />
            </summary>
        </member>
        <member name="M:AppFormTag.Base.OneLabel.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            
            </summary>
            <param name="_Name"></param>
            <param name="_Attribute"></param>
        </member>
        <member name="P:AppFormTag.Base.TwoLabel.Text">
            <summary>
            标签内部 元素
            </summary>
        </member>
        <member name="M:AppFormTag.Base.TwoLabel.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            成对标签
            </summary>
            <param name="_Name">标签名称</param>
            <param name="_Attribute">标签属性</param>
        </member>
        <member name="T:AppFormTag.FormsBase">
            <summary>
            表单基类
            </summary>
        </member>
        <member name="M:AppFormTag.FormsBase.AnalysisExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            解析表达式
            </summary>
            <param name="Field"></param>
            <returns>(string,string) Item1=字段名 Item2=显示名称</returns>
        </member>
        <member name="M:AppFormTag.FormsBase.ObjectToDictionary(System.Object)">
            <summary>
            将匿名对象转换为字典
            </summary>
            <param name="Attribute"></param>
            <returns></returns>
        </member>
        <member name="M:AppFormTag.FormsBase.GetDisplayName``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取字段显示名称
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Field"></param>
            <returns></returns>
        </member>
        <member name="M:AppFormTag.FormsBase.GetField``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取字段名称和显示名称
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Field">字段</param>
            <returns>(string,string) Item1=字段名、Item2=显示名称</returns>
        </member>
        <member name="M:AppFormTag.UI.CreateViewModel(System.Object[])">
            <summary>
            创建 JS 实体
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
